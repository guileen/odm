ODM:
    ✔ Design Document @done(20-04-29 18:54)
    ✔ Interface Design @done(20-04-29 18:54)
    ✔ 重新建一个仓库，之前提交了不该提交的 test 文件 @done(20-05-01 15:07)
    ✔ types 这个包名感觉容易冲突， @done(20-05-01 15:07)
    ☐ 优化异常处理使用 fmt.Errorf("xxx%w", err) @high 
    Design:
        ☐ 将方言和接口分开 DB，odm.Open()出来的DB包含易用性接口，但各个方言实现，只需要考虑底层的
    Table:
        ✔ Test case @done(20-05-01 15:07)
        ✔ Insert @done(20-05-01 15:06)
        ✔ Update @done(20-05-01 15:06)
        ✔ Get @done(20-05-01 15:06)
        ✔ Find @done(20-05-01 15:06)
        ✔ Delete @done(20-05-01 15:06)
        ✔ Example @done(20-05-01 19:41)
    DB:
        ☐ CreateTable @critical @today 
        ☐ TransactWrite @critical 
        ☐ TransactGet @critical 
        ☐ BatchWrite @high 
        ☐ BatchRead @high 
        ☐ 在DB上封装类似Gorm的易用性操作
    连接池: 
        ✔ odm.Open() @done(20-05-01 19:41) @lasted(50s)
        ☐ !连接池 ...
        ☐ 超时等异常处理
        ☐ 理解DynamoDB的Session和直接Config的区别。
        ☐ 了解DynamoDB是长连接还是短连接
    Schema生成:
        ☐ 数据库字段按小写下划线
    易用性接口:
        ☐ 缓存反射元信息，优化性能
    问题:
        ☐ 1.Dynamo支不支持长连接问题
        ☐ 2.根据条件同时更新多条记录的问题，批量删除
        ☐ 3.返回值1M限制？
        ☐ 4.query缓存设计